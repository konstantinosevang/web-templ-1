{"ast":null,"code":"var _jsxFileName = \"/Users/michalisevangelides/Documents/Konstantinos/Webdev temp/clients/frontend/src/components/Chatbot/Chatbot.js\",\n  _s = $RefreshSig$();\n// src/components/Chatbot/Chatbot.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chatbot.css'; // Importing the CSS for styling\nimport { FaRobot } from 'react-icons/fa'; // Icon for the chatbot button\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatRef = useRef(null);\n  useEffect(() => {\n    // Ensure chat window opens in a visible position\n    const handleResize = () => {\n      if (chatRef.current) {\n        const rect = chatRef.current.getBoundingClientRect();\n        if (rect.bottom > window.innerHeight) {\n          chatRef.current.style.top = `${window.innerHeight - rect.height - 10}px`;\n        }\n        if (rect.right > window.innerWidth) {\n          chatRef.current.style.left = `${window.innerWidth - rect.width - 10}px`;\n        }\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  const toggleChat = () => setIsOpen(!isOpen);\n  const handleInputChange = e => setInput(e.target.value);\n  const handleInputSubmit = e => {\n    e.preventDefault();\n    if (input.trim() !== '') {\n      setMessages([...messages, {\n        sender: 'user',\n        text: input\n      }]);\n      setInput('');\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: 'bot',\n          text: \"I can't talk right now, come back later.\"\n        }]);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-icon\",\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(FaRobot, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      ref: chatRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"StarBot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChat,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-bubble\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-input\",\n        onSubmit: handleInputSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleInputChange,\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"VO9poGmg6sZM6RqyTiYrpjeqHPo=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FaRobot","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","input","setInput","chatRef","handleResize","current","rect","getBoundingClientRect","bottom","window","innerHeight","style","top","height","right","innerWidth","left","width","addEventListener","removeEventListener","toggleChat","handleInputChange","e","target","value","handleInputSubmit","preventDefault","trim","sender","text","setTimeout","prevMessages","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","index","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/michalisevangelides/Documents/Konstantinos/Webdev temp/clients/frontend/src/components/Chatbot/Chatbot.js"],"sourcesContent":["// src/components/Chatbot/Chatbot.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chatbot.css'; // Importing the CSS for styling\nimport { FaRobot } from 'react-icons/fa'; // Icon for the chatbot button\n\nconst Chatbot = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const chatRef = useRef(null);\n\n  useEffect(() => {\n    // Ensure chat window opens in a visible position\n    const handleResize = () => {\n      if (chatRef.current) {\n        const rect = chatRef.current.getBoundingClientRect();\n        if (rect.bottom > window.innerHeight) {\n          chatRef.current.style.top = `${window.innerHeight - rect.height - 10}px`;\n        }\n        if (rect.right > window.innerWidth) {\n          chatRef.current.style.left = `${window.innerWidth - rect.width - 10}px`;\n        }\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const toggleChat = () => setIsOpen(!isOpen);\n\n  const handleInputChange = (e) => setInput(e.target.value);\n\n  const handleInputSubmit = (e) => {\n    e.preventDefault();\n    if (input.trim() !== '') {\n      setMessages([...messages, { sender: 'user', text: input }]);\n      setInput('');\n      setTimeout(() => {\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          { sender: 'bot', text: \"I can't talk right now, come back later.\" },\n        ]);\n      }, 1000);\n    }\n  };\n\n  return (\n    <div className=\"chatbot\">\n      <div className=\"chatbot-icon\" onClick={toggleChat}>\n        <FaRobot />\n      </div>\n      {isOpen && (\n        <div className=\"chat-window\" ref={chatRef}>\n          <div className=\"chat-header\">\n            <h4>StarBot</h4>\n            <button onClick={toggleChat}>Ã—</button>\n          </div>\n          <div className=\"chat-body\">\n            {messages.map((msg, index) => (\n              <div key={index} className={`chat-message ${msg.sender}`}>\n                <div className=\"chat-bubble\">{msg.text}</div>\n              </div>\n            ))}\n          </div>\n          <form className=\"chat-input\" onSubmit={handleInputSubmit}>\n            <input\n              type=\"text\"\n              value={input}\n              onChange={handleInputChange}\n              placeholder=\"Type a message...\"\n            />\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}